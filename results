Starting epoch 1/5.
x5: torch.Size([1, 512, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
Validation Dice Coeff at batch 1: 9.604763651083204e-10
x5: torch.Size([1, 512, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
Validation Dice Coeff at batch 2: 1.1994434334638981e-09
x5: torch.Size([1, 512, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
Validation Dice Coeff at batch 3: 1.2687617623186043e-09
x5: torch.Size([2, 512, 40, 40]), x4: torch.Size([2, 512, 80, 80])
x: torch.Size([2, 256, 80, 80]), x3: torch.Size([2, 256, 160, 160])
x: torch.Size([2, 128, 160, 160]), x2: torch.Size([2, 128, 320, 320])
x: torch.Size([2, 64, 320, 320]), x1: torch.Size([2, 64, 640, 640])
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
    PrunableConv2d-1         [-1, 64, 640, 640]           1,792
PrunableBatchNorm2d-2         [-1, 64, 640, 640]             128
              ReLU-3         [-1, 64, 640, 640]               0
    PrunableConv2d-4         [-1, 64, 640, 640]          36,928
PrunableBatchNorm2d-5         [-1, 64, 640, 640]             128
              ReLU-6         [-1, 64, 640, 640]               0
     p_double_conv-7         [-1, 64, 640, 640]               0
          p_inconv-8         [-1, 64, 640, 640]               0
         MaxPool2d-9         [-1, 64, 320, 320]               0
   PrunableConv2d-10        [-1, 128, 320, 320]          73,856
PrunableBatchNorm2d-11        [-1, 128, 320, 320]             256
             ReLU-12        [-1, 128, 320, 320]               0
   PrunableConv2d-13        [-1, 128, 320, 320]         147,584
PrunableBatchNorm2d-14        [-1, 128, 320, 320]             256
             ReLU-15        [-1, 128, 320, 320]               0
    p_double_conv-16        [-1, 128, 320, 320]               0
           p_down-17        [-1, 128, 320, 320]               0
        MaxPool2d-18        [-1, 128, 160, 160]               0
   PrunableConv2d-19        [-1, 256, 160, 160]         295,168
PrunableBatchNorm2d-20        [-1, 256, 160, 160]             512
             ReLU-21        [-1, 256, 160, 160]               0
   PrunableConv2d-22        [-1, 256, 160, 160]         590,080
PrunableBatchNorm2d-23        [-1, 256, 160, 160]             512
             ReLU-24        [-1, 256, 160, 160]               0
    p_double_conv-25        [-1, 256, 160, 160]               0
           p_down-26        [-1, 256, 160, 160]               0
        MaxPool2d-27          [-1, 256, 80, 80]               0
   PrunableConv2d-28          [-1, 512, 80, 80]       1,180,160
PrunableBatchNorm2d-29          [-1, 512, 80, 80]           1,024
             ReLU-30          [-1, 512, 80, 80]               0
   PrunableConv2d-31          [-1, 512, 80, 80]       2,359,808
PrunableBatchNorm2d-32          [-1, 512, 80, 80]           1,024
             ReLU-33          [-1, 512, 80, 80]               0
    p_double_conv-34          [-1, 512, 80, 80]               0
           p_down-35          [-1, 512, 80, 80]               0
        MaxPool2d-36          [-1, 512, 40, 40]               0
   PrunableConv2d-37          [-1, 512, 40, 40]       2,359,808
PrunableBatchNorm2d-38          [-1, 512, 40, 40]           1,024
             ReLU-39          [-1, 512, 40, 40]               0
   PrunableConv2d-40          [-1, 512, 40, 40]       2,359,808
PrunableBatchNorm2d-41          [-1, 512, 40, 40]           1,024
             ReLU-42          [-1, 512, 40, 40]               0
    p_double_conv-43          [-1, 512, 40, 40]               0
           p_down-44          [-1, 512, 40, 40]               0
         Upsample-45          [-1, 512, 80, 80]               0
   PrunableConv2d-46          [-1, 256, 80, 80]       2,359,552
PrunableBatchNorm2d-47          [-1, 256, 80, 80]             512
             ReLU-48          [-1, 256, 80, 80]               0
   PrunableConv2d-49          [-1, 256, 80, 80]         590,080
PrunableBatchNorm2d-50          [-1, 256, 80, 80]             512
             ReLU-51          [-1, 256, 80, 80]               0
    p_double_conv-52          [-1, 256, 80, 80]               0
             p_up-53          [-1, 256, 80, 80]               0
         Upsample-54        [-1, 256, 160, 160]               0
   PrunableConv2d-55        [-1, 128, 160, 160]         589,952
PrunableBatchNorm2d-56        [-1, 128, 160, 160]             256
             ReLU-57        [-1, 128, 160, 160]               0
   PrunableConv2d-58        [-1, 128, 160, 160]         147,584
PrunableBatchNorm2d-59        [-1, 128, 160, 160]             256
             ReLU-60        [-1, 128, 160, 160]               0
    p_double_conv-61        [-1, 128, 160, 160]               0
             p_up-62        [-1, 128, 160, 160]               0
         Upsample-63        [-1, 128, 320, 320]               0
   PrunableConv2d-64         [-1, 64, 320, 320]         147,520
PrunableBatchNorm2d-65         [-1, 64, 320, 320]             128
             ReLU-66         [-1, 64, 320, 320]               0
   PrunableConv2d-67         [-1, 64, 320, 320]          36,928
PrunableBatchNorm2d-68         [-1, 64, 320, 320]             128
             ReLU-69         [-1, 64, 320, 320]               0
    p_double_conv-70         [-1, 64, 320, 320]               0
             p_up-71         [-1, 64, 320, 320]               0
         Upsample-72         [-1, 64, 640, 640]               0
   PrunableConv2d-73         [-1, 64, 640, 640]          73,792
PrunableBatchNorm2d-74         [-1, 64, 640, 640]             128
             ReLU-75         [-1, 64, 640, 640]               0
   PrunableConv2d-76         [-1, 64, 640, 640]          36,928
PrunableBatchNorm2d-77         [-1, 64, 640, 640]             128
             ReLU-78         [-1, 64, 640, 640]               0
    p_double_conv-79         [-1, 64, 640, 640]               0
             p_up-80         [-1, 64, 640, 640]               0
   PrunableConv2d-81          [-1, 1, 640, 640]              65
        p_outconv-82          [-1, 1, 640, 640]               0
================================================================
Total params: 13,395,329
Trainable params: 13,395,329
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 4.69
Forward/backward pass size (MB): 5825.00
Params size (MB): 51.10
Estimated Total Size (MB): 5880.79
----------------------------------------------------------------
x5: torch.Size([1, 512, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
0.0000 --- loss: 0.692626
x5: torch.Size([1, 512, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
0.0001 --- loss: 0.634445
x5: torch.Size([1, 512, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
0.0002 --- loss: 0.406523
x5: torch.Size([2, 412, 40, 40]), x4: torch.Size([2, 512, 80, 80])
x: torch.Size([2, 256, 80, 80]), x3: torch.Size([2, 256, 160, 160])
x: torch.Size([2, 128, 160, 160]), x2: torch.Size([2, 128, 320, 320])
x: torch.Size([2, 64, 320, 320]), x1: torch.Size([2, 64, 640, 640])
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
    PrunableConv2d-1         [-1, 64, 640, 640]           1,792
PrunableBatchNorm2d-2         [-1, 64, 640, 640]             128
              ReLU-3         [-1, 64, 640, 640]               0
    PrunableConv2d-4         [-1, 64, 640, 640]          36,928
PrunableBatchNorm2d-5         [-1, 64, 640, 640]             128
              ReLU-6         [-1, 64, 640, 640]               0
     p_double_conv-7         [-1, 64, 640, 640]               0
          p_inconv-8         [-1, 64, 640, 640]               0
         MaxPool2d-9         [-1, 64, 320, 320]               0
   PrunableConv2d-10        [-1, 128, 320, 320]          73,856
PrunableBatchNorm2d-11        [-1, 128, 320, 320]             256
             ReLU-12        [-1, 128, 320, 320]               0
   PrunableConv2d-13        [-1, 128, 320, 320]         147,584
PrunableBatchNorm2d-14        [-1, 128, 320, 320]             256
             ReLU-15        [-1, 128, 320, 320]               0
    p_double_conv-16        [-1, 128, 320, 320]               0
           p_down-17        [-1, 128, 320, 320]               0
        MaxPool2d-18        [-1, 128, 160, 160]               0
   PrunableConv2d-19        [-1, 156, 160, 160]         179,868
PrunableBatchNorm2d-20        [-1, 156, 160, 160]             312
             ReLU-21        [-1, 156, 160, 160]               0
   PrunableConv2d-22        [-1, 256, 160, 160]         359,680
PrunableBatchNorm2d-23        [-1, 256, 160, 160]             512
             ReLU-24        [-1, 256, 160, 160]               0
    p_double_conv-25        [-1, 256, 160, 160]               0
           p_down-26        [-1, 256, 160, 160]               0
        MaxPool2d-27          [-1, 256, 80, 80]               0
   PrunableConv2d-28          [-1, 412, 80, 80]         949,660
PrunableBatchNorm2d-29          [-1, 412, 80, 80]             824
             ReLU-30          [-1, 412, 80, 80]               0
   PrunableConv2d-31          [-1, 512, 80, 80]       1,899,008
PrunableBatchNorm2d-32          [-1, 512, 80, 80]           1,024
             ReLU-33          [-1, 512, 80, 80]               0
    p_double_conv-34          [-1, 512, 80, 80]               0
           p_down-35          [-1, 512, 80, 80]               0
        MaxPool2d-36          [-1, 512, 40, 40]               0
   PrunableConv2d-37          [-1, 512, 40, 40]       2,359,808
PrunableBatchNorm2d-38          [-1, 512, 40, 40]           1,024
             ReLU-39          [-1, 512, 40, 40]               0
   PrunableConv2d-40          [-1, 412, 40, 40]       1,898,908
PrunableBatchNorm2d-41          [-1, 412, 40, 40]             824
             ReLU-42          [-1, 412, 40, 40]               0
    p_double_conv-43          [-1, 412, 40, 40]               0
           p_down-44          [-1, 412, 40, 40]               0
         Upsample-45          [-1, 412, 80, 80]               0
   PrunableConv2d-46          [-1, 256, 80, 80]       2,129,152
PrunableBatchNorm2d-47          [-1, 256, 80, 80]             512
             ReLU-48          [-1, 256, 80, 80]               0
   PrunableConv2d-49          [-1, 256, 80, 80]         590,080
PrunableBatchNorm2d-50          [-1, 256, 80, 80]             512
             ReLU-51          [-1, 256, 80, 80]               0
    p_double_conv-52          [-1, 256, 80, 80]               0
             p_up-53          [-1, 256, 80, 80]               0
         Upsample-54        [-1, 256, 160, 160]               0
   PrunableConv2d-55        [-1, 128, 160, 160]         589,952
PrunableBatchNorm2d-56        [-1, 128, 160, 160]             256
             ReLU-57        [-1, 128, 160, 160]               0
   PrunableConv2d-58        [-1, 128, 160, 160]         147,584
PrunableBatchNorm2d-59        [-1, 128, 160, 160]             256
             ReLU-60        [-1, 128, 160, 160]               0
    p_double_conv-61        [-1, 128, 160, 160]               0
             p_up-62        [-1, 128, 160, 160]               0
         Upsample-63        [-1, 128, 320, 320]               0
   PrunableConv2d-64         [-1, 64, 320, 320]         147,520
PrunableBatchNorm2d-65         [-1, 64, 320, 320]             128
             ReLU-66         [-1, 64, 320, 320]               0
   PrunableConv2d-67         [-1, 64, 320, 320]          36,928
PrunableBatchNorm2d-68         [-1, 64, 320, 320]             128
             ReLU-69         [-1, 64, 320, 320]               0
    p_double_conv-70         [-1, 64, 320, 320]               0
             p_up-71         [-1, 64, 320, 320]               0
         Upsample-72         [-1, 64, 640, 640]               0
   PrunableConv2d-73         [-1, 64, 640, 640]          73,792
PrunableBatchNorm2d-74         [-1, 64, 640, 640]             128
             ReLU-75         [-1, 64, 640, 640]               0
   PrunableConv2d-76         [-1, 64, 640, 640]          36,928
PrunableBatchNorm2d-77         [-1, 64, 640, 640]             128
             ReLU-78         [-1, 64, 640, 640]               0
    p_double_conv-79         [-1, 64, 640, 640]               0
             p_up-80         [-1, 64, 640, 640]               0
   PrunableConv2d-81          [-1, 1, 640, 640]              65
        p_outconv-82          [-1, 1, 640, 640]               0
================================================================
Total params: 11,666,429
Trainable params: 11,666,429
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 4.69
Forward/backward pass size (MB): 5740.77
Params size (MB): 44.50
Estimated Total Size (MB): 5789.96
----------------------------------------------------------------
x5: torch.Size([1, 412, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
Validation Dice Coeff at batch 1: 0.7222916483879089
x5: torch.Size([1, 412, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
Validation Dice Coeff at batch 2: 0.5759257674217224
x5: torch.Size([1, 412, 40, 40]), x4: torch.Size([1, 512, 80, 80])
x: torch.Size([1, 256, 80, 80]), x3: torch.Size([1, 256, 160, 160])
x: torch.Size([1, 128, 160, 160]), x2: torch.Size([1, 128, 320, 320])
x: torch.Size([1, 64, 320, 320]), x1: torch.Size([1, 64, 640, 640])
Validation Dice Coeff at batch 3: 0.5380808115005493
Epoch finished ! Loss: 0.5778645972410837